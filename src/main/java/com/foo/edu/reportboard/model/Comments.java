package com.foo.edu.reportboard.model;
// Generated 2018/02/11 6:29:27 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Comments generated by hbm2java
 */
@Entity
@Table(name = "comments")
@NamedQueries ({
	@NamedQuery(name="Comments.findAll" ,query="SELECT c FROM Comments c ORDER BY c.commentId ASC"),
	@NamedQuery(name="Comments.findById",query="SELECT c FROM Comments c WHERE c.commentId = :commentId")
})
public class Comments implements java.io.Serializable {
	private static final long serialVersionUID = 7370351907774563475L;
	private int commentId;
	private Reports reports;
	private Users users;
	private String comment;
	private Date createdWhen;
	private Set<CommentImages> commentImageses = new HashSet<CommentImages>(0);

	public Comments() {
	}

	public Comments(int commentId, String comment, Date createdWhen) {
		this.commentId = commentId;
		this.comment = comment;
		this.createdWhen = createdWhen;
	}

	public Comments(int commentId, Reports reports, Users users, String comment, Date createdWhen,
			Set<CommentImages> commentImageses) {
		this.commentId = commentId;
		this.reports = reports;
		this.users = users;
		this.comment = comment;
		this.createdWhen = createdWhen;
		this.commentImageses = commentImageses;
	}

	@Id

	@Column(name = "comment_id", unique = true, nullable = false)
	public int getCommentId() {
		return this.commentId;
	}

	public void setCommentId(int commentId) {
		this.commentId = commentId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "report_id")
	public Reports getReports() {
		return this.reports;
	}

	public void setReports(Reports reports) {
		this.reports = reports;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "created_user_id")
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "comment", nullable = false)
	public String getComment() {
		return this.comment;
	}

	public void setComment(String comment) {
		this.comment = comment;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_when", nullable = false, length = 29)
	public Date getCreatedWhen() {
		return this.createdWhen;
	}

	public void setCreatedWhen(Date createdWhen) {
		this.createdWhen = createdWhen;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "comments")
	public Set<CommentImages> getCommentImageses() {
		return this.commentImageses;
	}

	public void setCommentImageses(Set<CommentImages> commentImageses) {
		this.commentImageses = commentImageses;
	}

}
